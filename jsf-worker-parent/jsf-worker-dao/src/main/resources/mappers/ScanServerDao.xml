<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ipd.jsf.worker.dao.ScanServerDao">
    <resultMap type="Server"  id="ServerResultMap">
        <id column="server_id" property="id"  jdbcType="INTEGER"/>
        <result column="server_uniquekey" property="uniqKey" />
        <result column="interface_id" property="interfaceId" />
        <result column="interface_name" property="interfaceName" />
        <result column="server_ip" property="ip" />
        <result column="server_port" property="port" />
        <result column="server_pid" property="pid" />
        <result column="server_alias" property="alias" />
        <result column="server_status" property="status" />
        <result column="protocol" property="protocol"/>
        <result column="saf_version" property="safVer" />
        <result column="is_random" property="isRandom" />
        <result column="src_type" property="srcType" />
        <result column="server_weight" property="weight" />
        <result column="ins_key" property="insKey" />
        <result column="update_time" property="updateTime" />
		<result column="attr_url" property="attrUrl" />
		<result column="src_type" property="srcType" />
    </resultMap>

    <sql id="Base_Column_List" >
        server_id, server_uniquekey, interface_id, interface_name, server_ip, server_port, server_pid, server_alias,
        server_status, protocol, saf_version, is_random, src_type, server_weight, ins_key, update_time, attr_url
    </sql>

    <update id="updateStatusOffline">
        UPDATE saf_server
        SET 
            server_status = #{status},
            update_time = CURRENT_TIMESTAMP()
        WHERE
            server_id IN
	        <foreach item="item" index="index" collection="serverList" open="(" separator="," close=")">
				#{item.id}
			</foreach> AND src_type = 1
    </update>


    <update id="batchTagServerToDel">
        UPDATE saf_server
        SET
        server_status = #{status},
        del_time = #{delTime},
        update_time = CURRENT_TIMESTAMP()
        WHERE
        server_uniquekey in
        <foreach item="item" index="index" collection="uniqKeyList" open="(" separator="," close=")">
          #{item}
        </foreach>
        AND src_type = 1
    </update>

    <update id="batchTagServerToDelByIds">
        UPDATE saf_server
        SET
        server_status = #{status},
        del_time = #{delTime},
        update_time = CURRENT_TIMESTAMP()
        WHERE
        server_id IN
        <foreach item="item" index="index" collection="serverIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND src_type = 1
    </update>

    <select id="getServersByInsKeyList" resultMap="ServerResultMap">
        SELECT
            server_id, server_uniquekey, interface_id, interface_name, server_ip, server_port, server_alias,
        	server_status, protocol, saf_version, is_random, ins_key, attr_url, safurl_desc,
        	context_path, start_time, server_pid, server_room, server_weight, server_timeout,
        	opt_type, del_time, create_time, update_time, src_type
        FROM saf_server 
        WHERE ins_key IN
	        <foreach item="item" index="index" collection="insKeyList" open="(" separator="," close=")">
				#{item}
			</foreach>
        AND src_type = 1
    </select>

    <select id="getOnlineServersByIns" resultMap="ServerResultMap">
        SELECT
            server_id, server_uniquekey, interface_id, interface_name, server_ip, server_pid, server_port, server_alias,
        	server_status, protocol, saf_version, is_random, ins_key
        FROM saf_server
        WHERE 
            ins_key = #{insKey}
            AND server_status = 1
            AND src_type = 1
    </select>

    <select id="getNoInsServers" resultMap="ServerResultMap">
        <![CDATA[
        SELECT
            server_id, server_uniquekey, interface_id, interface_name, server_ip, server_port, server_alias,
        	server_status, protocol, saf_version, is_random, ins_key, attr_url, safurl_desc,
        	context_path, start_time, server_pid, server_room, server_weight, server_timeout,
        	opt_type, del_time, create_time, update_time, src_type
        FROM saf_server
        WHERE
            src_type IN (1, 2) AND server_status IN (4, 5) AND del_time < #{time}
        ]]>
        AND ins_key NOT IN (SELECT ins_key FROM saf_ins_hb)
    </select>

    <select id="getNoInsServersByRooms" resultMap="ServerResultMap">
        <![CDATA[
        SELECT
            server_uniquekey, interface_id, interface_name, server_ip, server_port, server_alias,
        	server_status, protocol, saf_version, is_random, ins_key, attr_url, safurl_desc,
        	context_path, start_time, server_pid, server_room, server_weight, server_timeout,
        	opt_type, del_time, create_time, update_time, src_type
        FROM saf_server
        WHERE
            src_type IN (1, 2) AND server_status IN (4, 5) AND del_time < #{time}
            AND ins_key NOT IN (SELECT ins_key FROM saf_ins_hb)
        ]]>
        <if test="rooms != null">
            and server_room IN
            <foreach item="item" index="index" collection="rooms" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <delete id="deleteServerByUniqkey" parameterType="java.util.List">
        DELETE FROM saf_server 
        WHERE server_uniquekey IN
        <foreach item="item" index="index" collection="uniqkeyList" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>

    <delete id="deleteServerById" parameterType="java.util.List">
        DELETE FROM saf_server
        WHERE server_id IN
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>

    <delete id="deleteByInsKey" >
        DELETE FROM saf_server WHERE ins_key = #{insKey} AND src_type = 1
    </delete>

    <update id="updateServerToRevival">
        <![CDATA[
        UPDATE saf_server
        SET server_status = #{status} , del_time = 0, update_time = CURRENT_TIMESTAMP()
        WHERE
            src_type = 1 AND server_status IN (0, 5) 
            AND server_id IN
        ]]>
        <foreach item="item" index="index" collection="serverList" open="(" separator="," close=")">
			#{item.id}
		</foreach>
    </update>

</mapper>
