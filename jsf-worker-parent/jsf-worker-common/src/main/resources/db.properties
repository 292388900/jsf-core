# jdbc settings
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://127.0.0.1:3306/saf21
jdbc.connectionProperties=useUnicode=true;characterEncoding=UTF8;rewriteBatchedStatements=true;socketTimeout=60000;autoReconnectForPools=true
#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制
jdbc.maxActive=40
#初始化连接:连接池启动时创建的初始化连接数量 
jdbc.initialSize=15
#最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制
jdbc.maxIdle=5
#最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建 
jdbc.minIdle=1
#最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常,如果设置为-1表示无限等待 -->
jdbc.maxWait=18000
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒
jdbc.minEvictableIdleTimeMillis=300000
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程
jdbc.timeBetweenEvictionRunsMillis=200000
#标记是否删除泄露的连接,如果他们超过了removeAbandonedTimout的限制.如果设置为true, 连接被认为是被泄露并且可以被删除,
#如果空闲时间超过removeAbandonedTimeout. 设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接. -->
jdbc.removeAbandoned=true
#泄露的连接可以被删除的超时值, 单位秒 -->
jdbc.removeAbandonedTimeout=300
jdbc.validationQuery=select 1
jdbc.username=root
jdbc.password=123456
